Instance {
  dataValues: 
   { userId: 1,
     userName: 'nuansric',
     password: '1++qjshn6urM7XZk+zYrj/xyWaXo3tis+/6ETC9tX9Y=',
     firstName: 'CN',
     address_1: '2703 Peninsulas Dr.',
     address_2: '',
     city: 'Missouri City',
     state: 'Texas',
     zipCode: '77459',
     country: 'United States',
     phone: '2818320332',
     email: 'chanita_n@icloud.com',
     longitude: -95.5431909,
     latitude: 29.558719,
     userServices: [ [Object], [Object], [Object], [Object], [Object] ] },
  _previousDataValues: 
   { userId: 1,
     userName: 'nuansric',
     password: '1++qjshn6urM7XZk+zYrj/xyWaXo3tis+/6ETC9tX9Y=',
     firstName: 'CN',
     address_1: '2703 Peninsulas Dr.',
     address_2: '',
     city: 'Missouri City',
     state: 'Texas',
     zipCode: '77459',
     country: 'United States',
     phone: '2818320332',
     email: 'chanita_n@icloud.com',
     longitude: -95.5431909,
     latitude: 29.558719,
     userServices: [ [Object], [Object], [Object], [Object], [Object] ] },
  _changed: {},
  '$modelOptions': 
   { timestamps: false,
     instanceMethods: {},
     classMethods: { associate: [Function: associate] },
     validate: {},
     freezeTableName: false,
     underscored: false,
     underscoredAll: false,
     paranoid: false,
     rejectOnEmpty: false,
     whereCollection: { userId: 1 },
     schema: null,
     schemaDelimiter: '',
     defaultScope: {},
     scopes: [],
     hooks: {},
     indexes: [],
     name: { plural: 'userProfiles', singular: 'userProfile' },
     omitNul: false,
     sequelize: 
      Sequelize {
        options: [Object],
        config: [Object],
        dialect: [Object],
        models: [Object],
        modelManager: [Object],
        connectionManager: [Object],
        importCache: [Object],
        test: [Object],
        queryInterface: [Object] },
     uniqueKeys: 
      { userProfiles_userName_unique: [Object],
        userProfiles_phone_unique: [Object],
        userProfiles_email_unique: [Object] },
     hasPrimaryKeys: true },
  '$options': 
   { isNewRecord: false,
     '$schema': null,
     '$schemaDelimiter': '',
     include: [ [Object] ],
     includeNames: [ 'userServices' ],
     includeMap: { userServices: [Object] },
     includeValidated: true,
     attributes: 
      [ 'userId',
        'userName',
        'password',
        'firstName',
        'address_1',
        'address_2',
        'city',
        'state',
        'zipCode',
        'country',
        'phone',
        'email',
        'longitude',
        'latitude' ],
     raw: true },
  hasPrimaryKeys: true,
  __eagerlyLoadedAssociations: [],
  isNewRecord: false,
  userServices: 
   [ Instance {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       '$modelOptions': [Object],
       '$options': [Object],
       hasPrimaryKeys: true,
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
     Instance {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       '$modelOptions': [Object],
       '$options': [Object],
       hasPrimaryKeys: true,
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
     Instance {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       '$modelOptions': [Object],
       '$options': [Object],
       hasPrimaryKeys: true,
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
     Instance {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       '$modelOptions': [Object],
       '$options': [Object],
       hasPrimaryKeys: true,
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
     Instance {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       '$modelOptions': [Object],
       '$options': [Object],
       hasPrimaryKeys: true,
       __eagerlyLoadedAssociations: [],
       isNewRecord: false } ] }
[{"id":3,"description":"haaaaa","discount":true,"serviceOfferServiceId":2,"userProfileUserId":1},{"id":4,"description":"haaaaa","discount":true,"serviceOfferServiceId":2,"userProfileUserId":1},{"id":5,"description":"hgjkk","discount":false,"serviceOfferServiceId":4,"userProfileUserId":1},{"id":6,"description":"sorry dont fixed","discount":true,"serviceOfferServiceId":3,"userProfileUserId":1},{"id":7,"description":"automotive","discount":true,"serviceOfferServiceId":3,"userProfileUserId":1}]

